/*
#define REGEXP_FLAG_LIST(V)                         \
  V(has_indices, HasIndices, hasIndices, 'd', 7)    \
  V(global, Global, global, 'g', 0)                 \
  V(ignore_case, IgnoreCase, ignoreCase, 'i', 1)    \
  V(linear, Linear, linear, 'l', 6)                 \
  V(multiline, Multiline, multiline, 'm', 2)        \
  V(dot_all, DotAll, dotAll, 's', 5)                \
  V(unicode, Unicode, unicode, 'u', 4)              \
  V(unicode_sets, UnicodeSets, unicodeSets, 'v', 8) \
  V(sticky, Sticky, sticky, 'y', 3)
*/  

const IDX2BRIEF = ['g','i','m','y','u','s','l','d','v']
const BRIEF2IDX = {
    "g": 0,
    "i": 1,
    "m": 2,
    "y": 3,
    "u": 4,
    "s": 5,
    "l": 6,
    "d": 7,
    "v": 8
}

const MASKD = {
    "g": 1,
    "i": 1<<1,
    "m": 1<<2,
    "y": 1<<3,
    "u": 1<<4,
    "s": 1<<5,
    "l": 1<<6,
    "d": 1<<7,
    "v": 1<<8
}



const s2n = (flags) => {
    let ui32=0;
	for(let i=0;i<flags.length;++i) {
	  let flag = flags[i];
	  if(MASKD[flag]) {
	     ui32 = ui32+MASKD[flag]
	  } else {}
	}
	return(ui32)
}


const n2s = (ui32)=> {
   let s = "";
   for(let i=0;i<IDX2BRIEF.length;++i) {
       let brief = IDX2BRIEF[i];
	   let cond = ui32 & (1<<i);
	   if(cond) {
	      s = s + brief;
	   } else {
	   }
   }
   return(s)
}


module.exports = {
   s2n,
   n2s
}
