const {deepStrictEqual} = require("assert");
const {sync} = require("nv-facutil-simple-test");
const v8 = require("v8");

const {decd}  = require("../r");

const ENCD_UN = 0X5F;
const ENCD_NU = 0X30;

const to_ab = (buf) => buf.buffer.slice(buf.byteOffset,buf.byteOffset+buf.byteLength); 

var ctors = [
    EvalError,
    RangeError,
    ReferenceError,
    SyntaxError,
    TypeError,
    URIError
];


var bis              = ctors.map(Cls=>new Cls(Cls.toString()))
var bufs              = bis.map(r=>v8.serialize(r));
var abs               = bufs.map(buf=>to_ab(buf));

var f0 = (buf)=> v8.deserialize(buf);
var f1 = (ab)=> decd(ab);  


for(let i=0;i<bis.length;++i) {deepStrictEqual(f1(abs[i]),bis[i])}

console.log("OK")
for(let i = -125000n;i<0n;++i) {bis.push(undefined,null,true,false)}
for(let i = 1n;i<125000n;++i)  {bis.push(undefined,null,true,false)}
var bufs              = bis.map(r=>v8.serialize(r));
var abs               = bufs.map(buf=>to_ab(buf));


var ff0 = ()=>bufs.forEach(buf=>f0(buf));
var ff1 = ()=>abs.forEach(ab=>f1(ab));
console.log(sync(1,ff0));
console.log(sync(1,ff1));
