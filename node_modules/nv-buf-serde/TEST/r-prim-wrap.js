const {deepStrictEqual} = require("assert");
const {sync} = require("nv-facutil-simple-test");
const v8 = require("v8");

const {decd}  = require("../r");

const ENCD_UN = 0X5F;
const ENCD_NU = 0X30;

const to_ab = (buf) => buf.buffer.slice(buf.byteOffset,buf.byteOffset+buf.byteLength); 


var trwap            = new Boolean(true);
var fwrap            = new Boolean(false);
var num_wrap         = new Number(1.1);
//var bi_wrap          = new BigInt(12345678901234567890234567890n);  in-js-layer this is invalid
var _1bs_wrap        = new String("abcd");
var _2bs_wrap        = new String("aÿ我𝑒");

var wraps             = [trwap,fwrap,num_wrap,_1bs_wrap,_2bs_wrap/*bi_wrap*/] 
var bufs              = wraps.map(r=>v8.serialize(r));
var abs               = bufs.map(buf=>to_ab(buf));

var f0 = (buf)=> v8.deserialize(buf);
var f1 = (ab)=> decd(ab);  


for(let i=0;i<wraps.length;++i) {deepStrictEqual(f1(abs[i]),wraps[i])}

console.log("OK")

var ff0 = ()=>bufs.forEach(buf=>f0(buf));
var ff1 = ()=>abs.forEach(ab=>f1(ab));
console.log(sync(1000000,ff0));
console.log(sync(1000000,ff1));
