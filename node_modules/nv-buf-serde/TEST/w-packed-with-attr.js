
const {sync} = require("nv-facutil-simple-test");
const v8 = require("v8");
const eq = (b0,b1)=> {
    var u8a = new Uint8Array(b1);
    for(let i =0;i<b0.length;++i) {
        if(b0[i] === u8a[i]) {

        } else {
            console.log(b0.slice(i));
            console.log(Buffer.from(b1.slice(i)));
            throw(i);
        }
    }
}
var fj = (o)=> JSON.stringify(o);
const {encd}  = require("../w");



var f0 = (o)=> v8.serialize(o);
var f1 = (o)=> encd(o,15);             //version default is 15 , using 13 just for test


var packed_with_attr = [1,1.1,undefined,null,true,false,"abcd","aÿ我𝑒",12345678901234567890n,[],{}]
packed_with_attr.k0  = "v0"
packed_with_attr.k1  = "v1"

console.log(f0(packed_with_attr));
console.log(Buffer.from(f1(packed_with_attr)));
eq(f0(packed_with_attr),f1(packed_with_attr))


packed_with_attr = Array.from({length:50000}).map(r=>packed_with_attr.slice(0));
packed_with_attr = packed_with_attr.flat();


var ff0 = ()=>packed_with_attr.forEach(e=>f0(e));
var ff1 = ()=>packed_with_attr.forEach(e=>f1(e));
console.log(sync(1,ff0));
console.log(sync(1,ff1));
