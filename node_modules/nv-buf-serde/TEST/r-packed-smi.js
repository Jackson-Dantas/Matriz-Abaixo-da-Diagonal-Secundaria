const {deepStrictEqual} = require("assert");
const {sync} = require("nv-facutil-simple-test");
const v8 = require("v8");

const {decd}  = require("../r");

const ENCD_UN = 0X5F;
const ENCD_NU = 0X30;

const to_ab = (buf) => buf.buffer.slice(buf.byteOffset,buf.byteOffset+buf.byteLength); 

var packed_smi        = [-(2**31),-1,0,1,2,3,4,5,2**31-1];

var smis              = [packed_smi]
var bufs              = smis.map(r=>v8.serialize(r));
var abs               = bufs.map(buf=>to_ab(buf));

var f0 = (buf)=> v8.deserialize(buf);
var f1 = (ab)=> decd(ab);  


for(let i=0;i<smis.length;++i) {deepStrictEqual(f1(abs[i]),smis[i])}

console.log("OK")

//for(let i = -5;i<-1;++i) {packed_smi.unshift(i)}
//for(let i = 1;i<5;++i)   {packed_smi.push(i)}

var bufs              = smis.map(r=>v8.serialize(r));
var abs               = bufs.map(buf=>to_ab(buf));

var ff0 = ()=>bufs.forEach(buf=>f0(buf));
var ff1 = ()=>abs.forEach(ab=>f1(ab));
console.log(sync(1000000,ff0));
console.log(sync(1000000,ff1));
