const {sync} = require("nv-facutil-simple-test");
const v8 = require("v8");
const eq = (b0,b1)=> {
    var u8a = new Uint8Array(b1);
    for(let i =0;i<b0.length;++i) {
        if(b0[i] === u8a[i]) {

        } else {
            throw(i)
        }
    }
}
var fj = (o)=> JSON.stringify(o);
const {encd}  = require("../w");

var trwap            = new Boolean(true);
var fwrap            = new Boolean(false);
var num_wrap         = new Number(1.1);
//var bi_wrap          = new BigInt(12345678901234567890234567890n);  in-js-layer this is invalid
var _1bs_wrap        = new String("abcd");
var _2bs_wrap        = new String("aÿ我𝑒");



var f0 = (o)=> v8.serialize(o);
var f1 = (o)=> encd(o,15);             //version default is 15 , using 13 just for test


var prim_wrap_ary = [trwap,fwrap,num_wrap,_1bs_wrap,_2bs_wrap]

console.log(f0(_2bs_wrap),"",Buffer.from(f1(_2bs_wrap)))

for(let dbl of prim_wrap_ary) {
    eq(f0(dbl),f1(dbl))
}

var ff0 = ()=>prim_wrap_ary.forEach(e=>f0(e));
var ff1 = ()=>prim_wrap_ary.forEach(e=>f1(e));
console.log(sync(100000,ff0));
console.log(sync(100000,ff1));

