
const {sync} = require("nv-facutil-simple-test");
const v8 = require("v8");
const eq = (b0,b1)=> {
    var u8a = new Uint8Array(b1);
    for(let i =0;i<b0.length;++i) {
        if(b0[i] === u8a[i]) {

        } else {
            throw(i)
        }
    }
}
var fj = (o)=> JSON.stringify(o);
const {encd}  = require("../w");

const ENCD_UN = 0X5F;
const ENCD_NU = 0X30;

var f0 = (o)=> v8.serialize(o);
var f1 = (o)=> encd(o,15);             //version default is 15 , using 13 just for test


var i32s              = [-(2**31)-1,2**31]

for(let i32 of i32s) {
    eq(f0(i32),f1(i32))
}

for(let i = -500000;i<0;++i) {i32s.push(-(2**31)-1+i)}
for(let i = 1;i<500000;++i) {i32s.push(2**31+i)}


var ff0 = ()=>i32s.forEach(i32=>f0(i32));
var ff1 = ()=>i32s.forEach(i32=>f1(i32));
console.log(sync(1,ff0));
console.log(sync(1,ff1));
