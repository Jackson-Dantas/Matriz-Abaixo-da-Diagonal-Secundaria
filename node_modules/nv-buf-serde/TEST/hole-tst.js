const fs = require("fs")
const v8 = require("v8")
const assert = require("assert")
//node --allow-natives-syntax
var buf = fs.readFileSync("tst.v8ser");
var sparse  = v8.deserialize(buf);
var dense = require("./tst.json");
assert.deepStrictEqual(sparse,dense);

var dupe = JSON.parse(JSON.stringify(sparse));
%DebugPrint(dupe)  // PACKED
var dupe = structuredClone(sparse);
%DebugPrint(dupe)  // HOLE 
var f0 = (o)=>JSON.parse(JSON.stringify(o))

var jdcp = (j) => {
    if(Array.isArray(j)) {
        let a = [];
        for(let i=0;i<j.length;++i) {a.push(jdcp(j[i]))}
        return(a)
    } else if(j===null) {
        return(null)
    } else if(j instanceof Object) {
        let d = {}
        for(let k in j) {d[k] = jdcp(j[k]) }
        return(d)
    } else {
        return(j)
    }
}

var dupe = jdcp(sparse);
%DebugPrint(dupe)  // PACKED
