const {deepStrictEqual} = require("assert");
const {sync} = require("nv-facutil-simple-test");
const v8 = require("v8");

const {decd}  = require("../r");

const ENCD_UN = 0X5F;
const ENCD_NU = 0X30;

const to_ab = (buf) => buf.buffer.slice(buf.byteOffset,buf.byteOffset+buf.byteLength); 

var packed_with_attr        = [-1,-0,1];
var packed_with_attr = [1,1.1,undefined,null,true,false,"abcd","aÿ我𝑒",12345678901234567890n,[],{}]
packed_with_attr.k0  = "v0"
packed_with_attr.k1  = "v1"


var dbls              = [packed_with_attr]
var bufs              = dbls.map(r=>v8.serialize(r));
var abs               = bufs.map(buf=>to_ab(buf));

var f0 = (buf)=> v8.deserialize(buf);
var f1 = (ab)=> decd(ab);  


for(let i=0;i<dbls.length;++i) {deepStrictEqual(f1(abs[i]),dbls[i])}

console.log("OK")

packed_with_attr = Array.from({length:50000}).map(r=>packed_with_attr.slice(0));
packed_with_attr = packed_with_attr.flat();

var dbls              = [packed_with_attr]
var bufs              = dbls.map(r=>v8.serialize(r));
var abs               = bufs.map(buf=>to_ab(buf));

var ff0 = ()=>bufs.forEach(buf=>f0(buf));
var ff1 = ()=>abs.forEach(ab=>f1(ab));
console.log(sync(20,ff0));
console.log(sync(20,ff1));
